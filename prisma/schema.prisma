// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int            @id @default(autoincrement())
  cardNumber           String?        @unique
  email                String         @unique
  password             String
  role                 UserRole       // Campo per distinguere il ruolo dell'utente
  name                 String?
  surname              String?
  gender               Gender?        // Mantiene il campo come opzionale
  birthDate            DateTime?      // Rendilo opzionale
  nationality          String?
  phoneNumber          String?
  studyField           String?
  originUniversity     String?
  hostUniversity       University?    // Assicurati che anche l'enum University gestisca un valore nulla
  exchangeDuration     Int?           // Rendilo opzionale
  studentNumber        String?
  countryOfOrigin      String?
  cityOfOrigin         String?
  addressCityOfOrigin  String?
  documentType         DocumentType?  // Mantiene il campo come opzionale
  documentNumber       String?
  documentExpiration   DateTime?      // Rendilo opzionale
  documentIssuer       String?

  // Relazioni
  eventsOrganized      Event[]        @relation("UserEvents")

  @@map("users")
}

model Event {
  id            Int      @id @default(autoincrement())
  code          Int
  name          String
  place         String
  address       String
  date          DateTime
  time          String
  description   String
  eventType     EventType
  price         Float
  participants  Int
  organizerId   Int

  organizer     User     @relation("UserEvents", fields: [organizerId], references: [id])

  @@map("events")
}

model Treasury {
  id            Int             @id @default(autoincrement())
  code          Int
  name          String
  transactionType TransactionType
  amount        Float
  category      Category
  channel       Channel
  date          DateTime
  note          String?
  
  // ... aggiungi relazioni se necessario ...

  @@map("treasuries")
}

model Discount {
  id            Int       @id @default(autoincrement())
  code          Int
  name          String
  discountType  DiscountType
  rate          Int
  expirationDate DateTime
  description   String
  link          String?
  
  // ... aggiungi relazioni se necessario ...

  @@map("discounts")
}

enum Gender {
  NONE
  MAN
  WOMAN
  NON_BINARY
  OTHER
  PREFER_NOT_TO_SPECIFY
}

enum University {
  NONE
  UNIVERSITA_DI_PISA
  SCUOLA_SUPERIORE_SANT_ANNA
  SCUOLA_NORMALE_SUPERIORE
}

enum DocumentType {
  NONE
  PASSPORT
  IDENTITY_CARD
  DRIVER_LICENSE
}

enum UserRole {
  //REJECTED
  //PENDING
  STUDENT
  VOLUNTEER
  ADMIN
}

enum EventType {
  CULTURE
  SOCIAL_INCLUSION
  EDUCATION_YOUTH
  HEALTH_WELLBEING
  SKILLS_EMPLOYABILITY
  ENVIRONMENTAL_SUSTAINABILITY
}

enum TransactionType {
  IN
  OUT
}

enum Category {
  EVENT
  OFFICE
  REFUND
  MEMBERSHIP_FEE
  MERCHANDISING
  OTHER
}

enum Channel {
  CASH
  BANK_TRANSFER
  DIGITAL_PAYMENT
  PAYMENT_TERMINAL
}

enum DiscountType {
  PERCENTAGE
  FIXED
  QUANTITY
}