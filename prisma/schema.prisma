generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int          @id @default(autoincrement())
  cardNumber          String?      @unique
  email               String       @unique
  name                String
  surname             String
  gender              Gender
  birthDate           DateTime
  nationality         String
  phoneNumber         String
  studyField          String
  originUniversity    String
  studentNumber       String
  countryOfOrigin     String
  cityOfOrigin        String
  addressCityOfOrigin String
  documentType        DocumentType
  documentNumber      String
  documentExpiration  DateTime
  documentIssuer      String
  exchangeDuration    Int?
  hostUniversity      University?
  password            String?
  role                UserRole
  profileImage        String?
  isVerified          Boolean?     @default(false)
  eventsOrganized     Event[]      @relation("UserEvents")

  @@map("users")
}

model Event {
  id           Int       @id @default(autoincrement())
  name         String
  place        String
  address      String
  date         DateTime
  time         String
  description  String
  eventType    EventType
  price        Float
  participants Int
  organizerId  Int?
  organizer    User?     @relation("UserEvents", fields: [organizerId], references: [id], onDelete: SetNull)

  @@map("events")
}

model Treasury {
  id              Int             @id @default(autoincrement())
  name            String
  transactionType TransactionType
  amount          Float
  category        Category
  channel         Channel
  date            DateTime
  note            String?

  @@map("treasuries")
}

model Discount {
  id             Int          @id @default(autoincrement())
  code           Int
  name           String
  rate           Int
  expirationDate DateTime
  description    String
  link           String?
  discountType   DiscountType

  @@map("discounts")
}

enum Gender {
  MAN
  WOMAN
  NON_BINARY
  OTHER
  PREFER_NOT_TO_SPECIFY
  NONE
}

enum University {
  UNIVERSITA_DI_PISA
  SCUOLA_SUPERIORE_SANT_ANNA
  SCUOLA_NORMALE_SUPERIORE
  NONE
}

enum DocumentType {
  PASSPORT
  IDENTITY_CARD
  DRIVER_LICENSE
  NONE
}

enum UserRole {
  STUDENT
  VOLUNTEER
}

enum EventType {
  CULTURE
  SOCIAL_INCLUSION
  EDUCATION_YOUTH
  HEALTH_WELLBEING
  SKILLS_EMPLOYABILITY
  ENVIRONMENTAL_SUSTAINABILITY
}

enum TransactionType {
  IN
  OUT
}

enum Category {
  EVENT
  OFFICE
  REFUND
  MEMBERSHIP_FEE
  MERCHANDISING
  OTHER
}

enum Channel {
  CASH
  BANK_TRANSFER
  DIGITAL_PAYMENT
  PAYMENT_TERMINAL
}

enum DiscountType {
  PERCENTAGE
  FIXED
  QUANTITY
}
